{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\next-study\\\\containers\\\\testContainer.tsx\",\n    _dec,\n    _class,\n    _temp;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nlet TestContainer = (_dec = inject('testStore'), _dec(_class = observer(_class = (_temp = class TestContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"testStore\", this.props.testStore);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}, _temp)) || _class) || _class);\nexport default TestContainer;","map":{"version":3,"sources":["D:/workspace/next-study/containers/testContainer.tsx"],"names":["React","observer","inject","TestContainer","Component","props","testStore","render"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,YAA/B;IASMC,a,WAFLD,MAAM,CAAC,WAAD,C,gBACND,Q,mBADD,MAEME,aAFN,SAE4BH,KAAK,CAACI,SAFlC,CAEkD;AAAA;AAAA;;AAAA,uCAC1B,KAAKC,KAAL,CAAWC,SADe;AAAA;;AAE9CC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAR6C,C;AAWlD,eAAeJ,aAAf","sourcesContent":["import React from 'react';\r\nimport {observer, inject} from 'mobx-react';\r\nimport TestStore from '../store/testStore';\r\n\r\ninterface Props{\r\n    testStore?:TestStore;\r\n}\r\n\r\n@inject('testStore')\r\n@observer\r\nclass TestContainer extends React.Component<Props>{\r\n    private testStore = this.props.testStore as TestStore;\r\n    render(){\r\n        return(\r\n            <div>\r\n                test\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestContainer;"]},"metadata":{},"sourceType":"module"}