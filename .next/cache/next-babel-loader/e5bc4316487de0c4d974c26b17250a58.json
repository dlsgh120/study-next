{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\next-study\\\\components\\\\Layout.tsx\",\n    _this = this;\n\nimport Link from 'next/link';\nimport styled from 'styled-components';\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children,\n      title = _ref.title;\n  return /*#__PURE__*/_jsxDEV(Wrap, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/about\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, _this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, _this);\n};\n\n_c3 = Layout;\n_c = Layout;\nvar Wrap = styled.div.withConfig({\n  displayName: \"Layout__Wrap\",\n  componentId: \"sc-1mv6drm-0\"\n})([\"&>a{text-decoration:none;}\"]);\n_c2 = Wrap;\nexport default Layout;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Layout\");\n$RefreshReg$(_c2, \"Wrap\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Layout\");","map":{"version":3,"sources":["D:/workspace/next-study/components/Layout.tsx"],"names":["Layout","children","title","Wrap","styled"],"mappings":";;;;;AACA,OAAA,IAAA,MAAA,WAAA;AACA,OAAA,MAAA,MAAA,mBAAA;;AAMA,IAAMA,MAA4C,GAAG,SAA/CA,MAA+C,CAAA,IAAA,EAAA;AAAA,MAAGC,QAAH,GAAA,IAAA,CAAA,QAAA;AAAA,MAAaC,KAAb,GAAA,IAAA,CAAA,KAAA;AAAA,SAAA,aACnD,OAAA,CAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA,CAAA,aACM,OAAA,CAAA,IAAA,EAAA;AAAM,MAAA,IAAI,EAAV,GAAA;AAAA,MAAA,QAAA,EAAA,aACE,OAAA,CAAA,GAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAAA,KAAA;AADF,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EADN,KACM,CADN,EAAA,aAIM,OAAA,CAAA,IAAA,EAAA;AAAM,MAAA,IAAI,EAAV,QAAA;AAAA,MAAA,QAAA,EAAA,aACE,OAAA,CAAA,GAAA,EAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAAA,KAAA;AADF,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAJN,KAIM,CAJN,EAAA,QAAA;AAAA,GAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,EAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADmD,KACnD,CADmD;AAArD,CAAA;;MAAMF,M;KAAAA,M;AAYN,IAAMG,IAAI,GAAGC,MAAM,CAAT,GAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,cAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAV,4BAAU,CAAGA,CAAb;MAAMD,I;AAMN,eAAA,MAAA","sourcesContent":["import * as React from 'react'\r\nimport Link from 'next/link'\r\nimport styled from 'styled-components';\r\n\r\ntype LayoutProps = {\r\n  title?: string\r\n}\r\n\r\nconst Layout: React.FunctionComponent<LayoutProps> = ({ children, title }) => (\r\n  <Wrap>\r\n        <Link href=\"/\">\r\n          <a>Home</a>\r\n        </Link>\r\n        <Link href=\"/about\">\r\n          <a>About</a>\r\n        </Link>\r\n    {children}\r\n  </Wrap>\r\n)\r\n\r\nconst Wrap = styled.div`\r\n  &>a{\r\n    text-decoration:none;\r\n  }\r\n`;\r\n\r\nexport default Layout;"]},"metadata":{},"sourceType":"module"}