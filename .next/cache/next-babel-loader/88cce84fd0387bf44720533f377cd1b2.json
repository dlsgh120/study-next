{"ast":null,"code":"import _regeneratorRuntime from \"D:/workspace/next-study/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/workspace/next-study/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\next-study\\\\pages\\\\p\\\\[test].tsx\",\n    _this = this;\n\nimport Layout from \"../../components/Layout\";\n\nvar Test = function Test(_ref) {\n  var query = _ref.query;\n  console.log(query);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: \"}\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, _this);\n};\n\n_c2 = Test;\n_c = Test;\n\nTest.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = context.query;\n            return _context.abrupt(\"return\", {\n              query: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c2;\n\n$RefreshReg$(_c2, \"Test\");","map":{"version":3,"sources":["D:/workspace/next-study/pages/p/[test].tsx"],"names":["Test","query","console","context"],"mappings":";;;;;;;AAAA,OAAA,MAAA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,CAAA,IAAA,EAAgB;AAAA,MAAdC,KAAc,GAAA,IAAA,CAAdA,KAAc;AACzBC,EAAAA,OAAO,CAAPA,GAAAA,CAAAA,KAAAA;AACA,SAAA,aACI,OAAA,CAAA,MAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADJ,KACI,CADJ;AAFJ,CAAA;;MAAMF,I;KAAAA,I;;AASNA,IAAI,CAAJA,eAAAA,GAAAA,aAAAA,YAAAA;AAAAA,MAAAA,KAAAA,GAAAA,iBAAAA,EAAAA,aAAAA,mBAAAA,CAAAA,IAAAA,CAAuB,SAAA,OAAA,CAAA,OAAA,EAAA;AAAA,QAAA,KAAA;AAAA,WAAA,mBAAA,CAAA,IAAA,CAAA,SAAA,QAAA,CAAA,QAAA,EAAA;AAAA,aAAA,CAAA,EAAA;AAAA,gBAAA,QAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AAAA,eAAA,CAAA;AACbC,YAAAA,KADa,GACLE,OAAO,CADF,KACbF;AADa,mBAAA,QAAA,CAAA,MAAA,CAAA,QAAA,EAEb;AACFA,cAAAA,KAAK,EAALA;AADE,aAFa,CAAA;;AAAA,eAAA,CAAA;AAAA,eAAA,KAAA;AAAA,mBAAA,QAAA,CAAA,IAAA,EAAA;AAAA;AAAA;AAAA,KAAA,EAAA,OAAA,CAAA;AAAvBD,GAAAA,CAAAA,CAAAA;;AAAAA,SAAAA,UAAAA,EAAAA,EAAAA;AAAAA,WAAAA,KAAAA,CAAAA,KAAAA,CAAAA,IAAAA,EAAAA,SAAAA,CAAAA;AAAAA,GAAAA;AAAAA,CAAAA,EAAAA;;AAMA,eAAA,IAAA","sourcesContent":["import Layout from '../../components/Layout';\r\n\r\nconst Test = ({query}:any) =>{\r\n    console.log(query)\r\n    return(\r\n        <Layout>\r\n            }\r\n        </Layout>\r\n    );\r\n}\r\n\r\nTest.getInitialProps = async(context:any) =>{\r\n    const query = context.query;\r\n    return{\r\n        query\r\n    }\r\n}\r\nexport default Test;"]},"metadata":{},"sourceType":"module"}