{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\workspace\\\\next-study\\\\pages\\\\index.tsx\";\nimport Layout from \"../components/Layout\";\nimport styled from 'styled-components';\nimport TestContainer from \"../containers/testContainer\";\n\nfunction Index(props) {\n  var data = props.data;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(Test, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"mobx\", /*#__PURE__*/_jsxDEV(TestContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = Index;\n_c = Index;\nvar Test = styled.div.withConfig({\n  displayName: \"pages__Test\",\n  componentId: \"n2qb7w-0\"\n})([\"&>img{width:100px;height:100px;}\"]);\n_c2 = Test;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Test\");\n;\n\nvar _a, _b; // Legacy CSS implementations will `eval` browser code in a Node.js context\n// to extract CSS. For backwards compatibility, we need to check we're in a\n// browser context before continuing.\n\n\nif (typeof self !== 'undefined' && // AMP / No-JS mode does not inject these helpers:\n'$RefreshHelpers$' in self) {\n  var currentExports = module.__proto__.exports;\n  var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null; // This cannot happen in MainTemplate because the exports mismatch between\n  // templating and execution.\n\n  self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id); // A module can be accepted automatically based on its exports, e.g. when\n  // it is a Refresh Boundary.\n\n  if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n    // Save the previous exports on update so we can compare the boundary\n    // signatures.\n    module.hot.dispose(function (data) {\n      data.prevExports = currentExports;\n    }); // Unconditionally accept an update to this module, we'll check if it's\n    // still a Refresh Boundary later.\n\n    module.hot.accept(); // This field is set when the previous version of this module was a\n    // Refresh Boundary, letting us know we need to check for invalidation or\n    // enqueue an update.\n\n    if (prevExports !== null) {\n      // A boundary can become ineligible if its exports are incompatible\n      // with the previous exports.\n      //\n      // For example, if you add/remove/change exports, we'll want to\n      // re-execute the importing modules, and force those components to\n      // re-render. Similarly, if you convert a class component to a\n      // function, we want to invalidate the boundary.\n      if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n        module.hot.invalidate();\n      } else {\n        self.$RefreshHelpers$.scheduleUpdate();\n      }\n    }\n  } else {\n    // Since we just executed the code for the module, it's possible that the\n    // new exports made it ineligible for being a boundary.\n    // We only care about the case when we were _previously_ a boundary,\n    // because we already accepted this update (accidental side effect).\n    var isNoLongerABoundary = prevExports !== null;\n\n    if (isNoLongerABoundary) {\n      module.hot.invalidate();\n    }\n  }\n}\n\nvar _c3;\n\n$RefreshReg$(_c3, \"Index\");","map":{"version":3,"sources":["D:/workspace/next-study/pages/index.tsx"],"names":["Index","data","props","message","Test","styled"],"mappings":";;AACA,OAAA,MAAA;AAEA,OAAA,MAAA,MAAA,mBAAA;AACA,OAAA,aAAA;;AACA,SAAA,KAAA,CAAA,KAAA,EAAyB;AAAA,MAChBC,IADgB,GACRC,KADQ,CAAA,IAAA;AAEvB,SAAA,aACE,OAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,KAAK,EAAb,MAAA;AAAA,IAAA,QAAA,EAAA,CAAA,aACE,OAAA,CAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA,aACE,OAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAED,IAAI,CAACE;AAAf,OAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAAA,IAAA;AADF,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EADF,IACE,CADF,EAAA,aAIE,OAAA,CAAA,KAAA,EAAA;AAAA,MAAA,QAAA,EAAA,CAAA,MAAA,EAAA,aAEE,OAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,CAAA,EAAA,KAAA,EAAA;AAAA,QAAA,QAAA,EAAA,YAAA;AAAA,QAAA,UAAA,EAAA,EAAA;AAAA,QAAA,YAAA,EAAA;AAAA,OAAA,EAFF,IAEE,CAFF;AAAA,KAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA,KAAA,EAJF,IAIE,CAJF;AAAA,GAAA,EAAA,KAAA,CAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA,YAAA;AAAA,IAAA,UAAA,EAAA,CAAA;AAAA,IAAA,YAAA,EAAA;AAAA,GAAA,EADF,IACE,CADF;AAWD;;MAbD,K;KAASH,K;AA0BT,IAAMI,IAAI,GAAGC,MAAM,CAAT,GAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,aAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAV,kCAAU,CAAGA,CAAb;MAAMD,I;;AAMN,eAAA,KAAA","sourcesContent":["import React from 'react'\r\nimport Layout from '../components/Layout'\r\nimport fetch from 'node-fetch';\r\nimport styled from 'styled-components';\r\nimport TestContainer from '../containers/testContainer';\r\nfunction Index(props:any){\r\n  const {data} = props;\r\n  return (\r\n    <Layout title=\"Home\">\r\n      <Test>\r\n        <img src={data.message} />\r\n      </Test>\r\n      <div>\r\n        mobx\r\n        <TestContainer />\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport async function getStaticProps(){\r\n  const res = await fetch(\r\n    'https://dog.ceo/api/breeds/image/random'\r\n  );\r\n  const data = await res.json();\r\n\r\n return {\r\n    props: { data }\r\n  };\r\n}\r\n\r\nconst Test = styled.div`\r\n  &>img{\r\n    width:100px;\r\n    height:100px;\r\n  }\r\n`;\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}